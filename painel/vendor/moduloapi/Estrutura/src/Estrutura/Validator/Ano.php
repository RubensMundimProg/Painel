<?phpnamespace Estrutura\Validator;use Zend\Validator\AbstractValidator;use Zend\Validator\Exception;class Ano extends AbstractValidator {    const INVALID = 'invalid';    const WRONG_LENGTH = 'wrongLength';    /**     * Validation failure message template definitions     *     * @var array     */    protected $messageTemplates = array(        self::INVALID => "O valor de entrada não corresponde a um Ano válido",        self::WRONG_LENGTH => "O valor de entrada deve conter 4 números",    );    /**     * Sets validator options     *     * @param  array|Traversable $options     * @throws Exception\InvalidArgumentException     */    public function __construct($options = null) {        parent::__construct($options);    }    /**     * Returns true if and only if $value is greater than min option     *     * @param  mixed $cpf     * @return bool     */    public function isValid($ano) {        if (strlen($ano) != 4) {            $this->error(self::WRONG_LENGTH);            return false;        } elseif (!preg_match('/^\d{4}$/', $ano)) {                        return false;        }        return true;    }}